{"version":3,"sources":["components/Card.js","components/FilterBar.js","components/Movie_List.js","components/Movie_Detail.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","card","width","media","height","Media","title","poster","rating","runtime","genres","classes","Card","className","CardHeader","action","IconButton","aria-label","subheader","Rating","name","value","precision","size","CardMedia","image","CardContent","map","genre","index","key","genreStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","PrettoSlider","withStyles","root","color","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","FilterBar","genreClasses","useContext","MovieListContext","state","actions","FormControl","InputLabel","shrink","id","Select","labelId","onChange","handleChange","displayEmpty","MenuItem","someAlign","setSomeAlignFilter","align","setAlignFilter","Typography","gutterBottom","valueLabelDisplay","defaultValue","max","min","setRatingFilter","createContext","Movie_List","useState","movieList","setMovieList","isLoading","setIsloading","pageNum","useRef","setGenre","setRating","setSomeAlign","setAlign","getMovieList","a","axios","get","current","movies","data","console","log","loadFunc","prevMovies","useEffect","e","preventDefault","target","Provider","pageStart","loadMore","hasMore","movie","to","medium_cover_image","fontSize","pos","marginBottom","MovieDetail","match","movieTitle","setMovieTitle","movieYear","setMovieYear","movieDescription_full","setMovieDescription_full","suggestionMovies","setSuggestionMovies","getMovieInfo","params","getSuggestionMovie","year","description_full","variant","component","sugMovie","App","path","MovieList","exact","Boolean","window","location","hostname","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe1cf59b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport \"./Card.css\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    width: 380\r\n  },\r\n  media: {\r\n    height: 500\r\n  }\r\n}));\r\n\r\nfunction Media({ title, poster, rating, runtime, genres }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={<IconButton aria-label=\"settings\"></IconButton>}\r\n        title={title}\r\n        subheader={\r\n          <div>\r\n            <div>\r\n              <Rating\r\n                name=\"size-large\"\r\n                value={rating / 2}\r\n                precision={0.5}\r\n                size=\"large\"\r\n              />\r\n            </div>\r\n            <div>상영시간 : {runtime}분</div>\r\n          </div>\r\n        }\r\n      />\r\n      {<CardMedia className={classes.media} image={poster} title={title} />}\r\n\r\n      <CardContent className=\"cardContent\">\r\n        {genres.map((genre, index) => (\r\n          <ul key={index} className=\"content-Ul\">\r\n            <li>{genre}</li>\r\n          </ul>\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Media;\r\n","import React, { useContext } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MovieListContext } from \"./Movie_List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport \"./FilterBar.css\";\r\n\r\nconst genreStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: \"#52af77\",\r\n    height: 8\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    \"&:focus,&:hover,&$active\": {\r\n      boxShadow: \"inherit\"\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\"\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4\r\n  }\r\n})(Slider);\r\n\r\nconst FilterBar = () => {\r\n  const genreClasses = genreStyles();\r\n  const { state, actions } = useContext(MovieListContext);\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={genreClasses.formControl}>\r\n        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n          장르선택\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-placeholder-label-label\"\r\n          id=\"demo-simple-select-placeholder-label\"\r\n          value={state.genre}\r\n          onChange={actions.handleChange}\r\n          displayEmpty\r\n          className={genreClasses.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>장르</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"Action\"}>Action</MenuItem>\r\n          <MenuItem value={\"Adventure\"}>Adventure</MenuItem>\r\n          <MenuItem value={\"Drama\"}>Drama</MenuItem>\r\n          <MenuItem value={\"Music\"}>Music</MenuItem>\r\n          <MenuItem value={\"Thriller\"}>Thriller</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl className={genreClasses.formControl}>\r\n        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n          평점|좋아요\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-placeholder-label-label\"\r\n          id=\"demo-simple-select-placeholder-label\"\r\n          value={state.someAlign}\r\n          onChange={actions.setSomeAlignFilter}\r\n          displayEmpty\r\n          className={genreClasses.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>정렬</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"rating\"}>평점순</MenuItem>\r\n          <MenuItem value={\"like_count\"}>좋아요순</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <FormControl className={genreClasses.formControl}>\r\n        <InputLabel shrink id=\"demo-simple-select-placeholder-label-label\">\r\n          오름|내림\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-placeholder-label-label\"\r\n          id=\"demo-simple-select-placeholder-label\"\r\n          value={state.align}\r\n          onChange={actions.setAlignFilter}\r\n          displayEmpty\r\n          className={genreClasses.selectEmpty}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>정렬</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"asc\"}>오름차순</MenuItem>\r\n          <MenuItem value={\"desc\"}>내림차순</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <div className=\"ratingFilter\">\r\n        <Typography id=\"discrete-slider\" gutterBottom>\r\n          별점\r\n        </Typography>\r\n        <PrettoSlider\r\n          valueLabelDisplay=\"auto\"\r\n          aria-label=\"pretto slider\"\r\n          defaultValue={5}\r\n          max={9}\r\n          min={0}\r\n          onChange={actions.setRatingFilter}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 3. 정렬 기능 :  평점순 오름차순, 내림차순 정렬  / (좋아요 숫자 오름차순 내림차순 정렬)\r\n// Action, Adventure, Drama, Music, Thriller 5개 장르 필터\r\n\r\nexport default FilterBar;\r\n","import React, { useState, useEffect, createContext, useRef } from \"react\";\r\nimport \"./reset.css\";\r\nimport \"./Movie_List.css\";\r\nimport axios from \"axios\";\r\nimport Media from \"./Card\";\r\nimport FilterBar from \"./FilterBar\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MovieListContext = createContext();\r\n\r\nconst Movie_List = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [isLoading, setIsloading] = useState(true);\r\n  let pageNum = useRef(1);\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [rating, setRating] = useState(5);\r\n  const [someAlign, setSomeAlign] = useState(\"\");\r\n  const [align, setAlign] = useState(\"desc\");\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    setGenre(e.target.value);\r\n  };\r\n  const setRatingFilter = (e, value) => {\r\n    setRating(value);\r\n  };\r\n\r\n  const setSomeAlignFilter = e => {\r\n    setSomeAlign(e.target.value);\r\n  };\r\n\r\n  const setAlignFilter = e => {\r\n    setAlign(e.target.value);\r\n  };\r\n\r\n  // const changeMovieListGenreFilter = async () => {\r\n  //   const {\r\n  //     data: {\r\n  //       data: { movies }\r\n  //     }\r\n  //   } = await axios.get(\r\n  //     `https://yts.lt/api/v2/list_movies.json?limit=12&genre=${genre}`\r\n  //   );\r\n  //   console.log(movies);\r\n  //   setMovieList(movies);\r\n  // };\r\n  // const [likeCount, setLikeCount] = useState([]);\r\n\r\n  const getMovieList = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\r\n      `https://yts.lt/api/v2/list_movies.json?limit=12&page=${pageNum.current}&genre=${genre}&minimum_rating=${rating}&sort_by=${someAlign}&order_by=${align}`\r\n    );\r\n    console.log(movies);\r\n    setMovieList(movies);\r\n    setIsloading(false);\r\n  };\r\n\r\n  const loadFunc = async () => {\r\n    pageNum.current += 1;\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\r\n      `https://yts.lt/api/v2/list_movies.json?limit=12&page=${pageNum.current}&genre=${genre}&minimum_rating=${rating}&sort_by=${someAlign}&order_by=${align}`\r\n    );\r\n    setMovieList(prevMovies => [...prevMovies, ...movies]);\r\n  };\r\n  // const getLikeCount = id => {\r\n  //   console.log(id);\r\n  //   const {\r\n  //     data: {\r\n  //       data: { like_count }\r\n  //     }\r\n  //   } = axios.get(`https://yts.lt/api/v2/movie_details.json?movie_id=${id}`);\r\n  //   console.log(like_count);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    getMovieList();\r\n    pageNum.current = 1;\r\n    setMovieList([]);\r\n  }, [genre, rating, someAlign, align]);\r\n\r\n  const value = {\r\n    state: { genre, rating, someAlign, align },\r\n    actions: {\r\n      handleChange,\r\n      setRatingFilter,\r\n      setSomeAlignFilter,\r\n      setAlignFilter\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MovieListContext.Provider value={value}>\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            <FilterBar />\r\n            <InfiniteScroll\r\n              pageStart={pageNum.current}\r\n              loadMore={loadFunc}\r\n              hasMore={true || false}\r\n            >\r\n              {movieList.map(movie => (\r\n                <div className=\"movie_list_item\" key={movie.id}>\r\n                  <Link to={`/detail/${movie.id}`}>\r\n                    <Media\r\n                      title={movie.title}\r\n                      poster={movie.medium_cover_image}\r\n                      rating={movie.rating}\r\n                      runtime={movie.runtime}\r\n                      genres={movie.genres}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </InfiniteScroll>\r\n          </div>\r\n        )}\r\n      </section>\r\n    </MovieListContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Movie_List;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Movie_Detail.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 400\r\n  },\r\n  title: {\r\n    fontSize: 14\r\n  },\r\n  pos: {\r\n    marginBottom: 12\r\n  }\r\n});\r\n\r\nconst MovieDetail = ({ match }) => {\r\n  const classes = useStyles();\r\n\r\n  const [movieTitle, setMovieTitle] = useState(\"\");\r\n  const [movieYear, setMovieYear] = useState();\r\n  const [movieDescription_full, setMovieDescription_full] = useState(\"\");\r\n  const [suggestionMovies, setSuggestionMovies] = useState([]);\r\n\r\n  const getMovieInfo = async () => {\r\n    const {\r\n      data: {\r\n        data: { movie }\r\n      }\r\n    } = await axios.get(\r\n      `https://yts.lt/api/v2/movie_details.json?movie_id=${match.params.id}`\r\n    );\r\n    getSuggestionMovie();\r\n    setMovieTitle(movie.title);\r\n    setMovieYear(movie.year);\r\n    setMovieDescription_full(movie.description_full);\r\n  };\r\n\r\n  const getSuggestionMovie = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies }\r\n      }\r\n    } = await axios.get(\r\n      `https://yts.lt/api/v2/movie_suggestions.json?movie_id=${match.params.id}`\r\n    );\r\n    setSuggestionMovies(movies);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMovieInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"MovieInfo\">\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {movieTitle}\r\n          </Typography>\r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            {movieYear}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            {movieDescription_full}\r\n          </Typography>\r\n          <div className=\"sugMovieTitle\">\r\n            <div className=\"sugMovieTop\">관련 영화</div>\r\n            {suggestionMovies.map(sugMovie => (\r\n              <div key={sugMovie.id} className=\"sugMovieItem\">\r\n                {sugMovie.title}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport MovieList from \"./components/Movie_List\";\nimport MovieDetail from \"./components/Movie_Detail\";\n\nconst App = () => {\n  return (\n    <div>\n      <Route path=\"/\" component={MovieList} exact={true} />\n      <Route path=\"/detail/:id\" component={MovieDetail} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}